---
stages:
  - init
  - build
  - test

variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.pip"
  GIT_STRATEGY: clone

cache:
  paths:
    - .pip/
    - virtenv/

before_script:
  - export HTTP_PROXY=${GITLAB_DEVOPS_GROUP_PROXY}
  - export HTTPS_PROXY=${GITLAB_DEVOPS_GROUP_PROXY}
  - export http_proxy=${GITLAB_DEVOPS_GROUP_PROXY}
  - export https_proxy=${GITLAB_DEVOPS_GROUP_PROXY}

prepare:
  stage: init
  script:
    - pip3 install virtualenv
    - python3 -m virtualenv virtenv
    - source virtenv/bin/activate
    - pip3 install -r requirements.txt
    - python3 -V
    - ansible --version
    - ansible-lint --version
    - molecule --version
    - docker --version

container:
  stage: build
  script:
    - source virtenv/bin/activate
    - docker build \
        -t ansible-role-mssql \
        --build-arg HTTP_PROXY=${GITLAB_DEVOPS_GROUP_PROXY} \
        --build-arg HTTPS_PROXY=${GITLAB_DEVOPS_GROUP_PROXY} \
        --build-arg http_proxy=${GITLAB_DEVOPS_GROUP_PROXY} \
        --build-arg https_proxy=${GITLAB_DEVOPS_GROUP_PROXY} \
        molecule/resources/docker/

molecule:
  stage: test
  script:
    - source virtenv/bin/activate
    - molecule test --parallel